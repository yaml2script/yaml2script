variables:
  DEBIAN_FRONTEND: noninteractive
  APT_GET_INSTALL: "apt-get install -q -y"

stages:
  - pre
  - build_test
  - deploy

.display_env:
  before_script:
    - date
    - uname -a
    - cat /etc/os-release

.test_pre-commit_yaml2script_check_01: &test_pre-commit_yaml2script_check_01
    - git config --global init.defaultBranch main
    - repo_dir="$(mktemp -d)"
    - git clone --bare . "$repo_dir"
    - (cd "$repo_dir" && git tag -f latest)
    - tmp_dir="$(mktemp -d)"
    - (cd "$tmp_dir" && git init)
    - cp -p tests/data/01_pre-commit-config.yaml "$tmp_dir"/.pre-commit-config.yaml
    - cp -p tests/data/01_gitlab-ci.yaml "$tmp_dir"/.gitlab-ci.yml
    - |
      sed -i "s#repo: repo_dir#repo: $repo_dir#" "$tmp_dir"/.pre-commit-config.yaml
    - (cd "$tmp_dir" && git add .)
    - (cd "$tmp_dir" && pre-commit run --all-files)

pre-commit:
  stage: pre
  image:
    name: alpine:latest
  extends: .display_env
  script:
    - apk add --no-cache git npm pre-commit
    - pre-commit --version
    # ignore file, it's a deliberate error test case
    - rm tests/data/03_extract_ruff
    - pre-commit run --all-files

pycodestyle:
  stage: pre
  image:
    name: alpine:latest
  extends: .display_env
  script:
    - apk add --no-cache py3-pycodestyle
    - pycodestyle --version
    - pycodestyle --show-source --show-pep8 --statistics --verbose .

pylint:
  stage: pre
  image:
    name: alpine:latest
  extends: .display_env
  script:
    - apk add --no-cache py3-pip py3-pylint py3-yaml
    - pip3 install --break-system-packages recommonmark
    - pylint --version
    - find . -name '*.py' -exec pylint {} +

ruff:
  stage: pre
  image:
    name: alpine:latest
  extends: .display_env
  script:
    - apk add --no-cache ruff
    - ruff check --unsafe-fixes --diff || echo "!!! todo !!!"
    - ruff check --output-format=full
    - ruff check --select NPY201 --fix --diff || echo "!!! todo !!!"
    - ruff check --select NPY201 --output-format=full

alpine-latest-pipx:
  stage: build_test
  image:
    name: alpine:latest
  extends: .display_env
  script:
    - apk add --no-cache git npm pipx pre-commit py3-pytest py3-pytest-xdist
    - export PATH="$PATH":~/.local/bin
    - pipx install . shellcheck-py pycodestyle
    - yaml2script --help
    - yaml2script all .gitlab-ci.yml
    - *test_pre-commit_yaml2script_check_01
    - pytest-3 --numprocesses=auto --verbose tests/main.py
    - pipx uninstall yaml2script

alpine-latest-pip:
  stage: build_test
  image:
    name: alpine:latest
  extends: .display_env
  script:
    - apk add --no-cache git npm pre-commit py3-pip
    - pip3 install --break-system-packages ".[pycodestyle, shellcheck, test]"
    - yaml2script --help
    - yaml2script all -verbose .gitlab-ci.yml
    - *test_pre-commit_yaml2script_check_01
    - pytest --numprocesses=auto --verbose tests/main.py

alpine-latest-pip-system-packages:
  stage: build_test
  image:
    name: alpine:latest
  extends: .display_env
  script:
    - apk add --no-cache git npm pre-commit py3-pip py3-pycodestyle py3-pytest py3-pytest-xdist py3-yaml shellcheck
    - pip3 install --no-deps --break-system-packages .
    - yaml2script --help
    - yaml2script all .gitlab-ci.yml
    - *test_pre-commit_yaml2script_check_01
    - pytest-3 --numprocesses=auto --verbose tests/main.py
    - pip3 uninstall -y --break-system-packages yaml2script

debian-latest-pipx:
  stage: build_test
  image:
    name: debian:latest
  extends: .display_env
  script:
    - apt-get update
    - $APT_GET_INSTALL git npm pipx pre-commit python3-pytest python3-pytest-xdist
    - export PATH="$PATH":~/.local/bin
    - pipx install .
    - pipx install shellcheck-py
    - pipx install pycodestyle
    - yaml2script --help
    - yaml2script all .gitlab-ci.yml
    - *test_pre-commit_yaml2script_check_01
    - pytest-3 --numprocesses=auto --verbose tests/main.py
    - pipx uninstall yaml2script

debian-latest-pip:
  stage: build_test
  image:
    name: debian:latest
  extends: .display_env
  script:
    - apt-get update
    - $APT_GET_INSTALL git npm pre-commit python3-pip
    - pip3 install --break-system-packages ".[pycodestyle, shellcheck, test]"
    - yaml2script --help
    - yaml2script all -verbose .gitlab-ci.yml
    - *test_pre-commit_yaml2script_check_01
    - pytest --numprocesses=auto --verbose tests/main.py

debian-latest-pip-system-packages:
  stage: build_test
  image:
    name: debian:latest
  extends: .display_env
  script:
    - apt-get update
    - $APT_GET_INSTALL git npm pre-commit pycodestyle python3-pip python3-pytest python3-pytest-cov python3-pytest-xdist python3-yaml shellcheck
    - pip3 install --no-deps --break-system-packages .
    - yaml2script --help
    - yaml2script all .gitlab-ci.yml
    - *test_pre-commit_yaml2script_check_01
    - pytest-3 --numprocesses=auto --cov=yaml2script --cov-report=html:coverage_report/ --cov-report=term --cov-report=xml --verbose tests/main.py
    - $APT_GET_INSTALL latexmk texlive-latex-extra texlive-latex-recommended make python3-recommonmark python3-sphinx python3-sphinx-argparse rsync tex-gyre
    - ./create_doc
    - mv manual_yaml2script public
    - pip3 uninstall -y --break-system-packages yaml2script
  coverage: '/^TOTAL\s*[0-9]+\s*[0-9]+\s*([0-9]+\%)$/'
  artifacts:
    paths:
      - manual_yaml2script.pdf
      - public
    reports:
      coverage_report:
        coverage_format: cobertura
        path: coverage.xml

pages:
  stage: deploy
  image:
    name: alpine:latest
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
  script:
    - date
    - apk add --no-cache pipx
    - export PATH="$PATH":"$HOME/.local/bin"
    - pipx install anybadge
    - anybadge -l "documentation as" -v "pdf" -f documentation_pdf.svg -c orange -o
    - anybadge -l "documentation as" -v "html" -f documentation_html.svg -c fuchsia -o
  artifacts:
    paths:
      - documentation_pdf.svg
      - documentation_html.svg
      - manual_yaml2script.pdf
      - public
